{"version":3,"sources":["webpack:///./src/components/Utterances.js","webpack:///./src/templates/blog-post.js"],"names":["repo","issueTerm","label","theme","crossorigin","async","style","rootElm","React","createRef","useEffect","utterances","document","createElement","Object","entries","src","forEach","key","value","setAttribute","current","appendChild","id","ref","className","css","BlogPost","data","pageContext","location","previousPost","nextPost","post","markdownRemark","image","frontmatter","childImageSharp","resize","Layout","SEO","title","description","pathname","to","rhythm","dangerouslySetInnerHTML","__html","html","role","aria-label","slug","rel","marginRight","Utterances","query"],"mappings":"qQAKe,cAQR,IAPLA,EAOI,EAPJA,KAOI,IANJC,iBAMI,MANQ,WAMR,MALJC,aAKI,MALI,GAKJ,MAJJC,aAII,MAJI,eAIJ,MAHJC,mBAGI,MAHU,YAGV,MAFJC,aAEI,aADJC,aACI,MADI,GACJ,EACEC,EAAUC,IAAMC,YAqBtB,OAnBAC,qBAAU,WACR,IAAMC,EAAaC,SAASC,cAAc,UAG1CC,OAAOC,QAAQ,CACbC,IAAK,gCACLhB,OACA,aAAcC,EACdC,QACAC,QACAC,cACAC,UACCY,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KAC3BR,EAAWS,aAAaF,EAAKC,MAG/BZ,EAAQc,QAAQC,YAAYX,KAC3B,IAGD,mBACEY,GAAG,uBACHC,IAAKjB,EACLkB,UAAWC,YACPpB,M,+DChCK,SAASqB,EAAT,GAAoD,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAC5CC,EAA2BF,EAA3BE,aAAcC,EAAaH,EAAbG,SAChBC,EAAOL,EAAKM,eACZC,EAAQF,EAAKG,YAAYD,MAC3BF,EAAKG,YAAYD,MAAME,gBAAgBC,OACvC,KAEJ,OACE,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CACEC,MAAOR,EAAKG,YAAYK,MACxBC,YAAaT,EAAKG,YAAYM,YAC9BP,MAAOA,EACPQ,SAAUb,EAASa,WAErB,oBACEjB,IAAG,GAKH,YAAC,OAAD,CACEkB,GAAG,SACHlB,IAAKA,YAAF,iBACgBmB,YAAO,GADvB,MAFL,UAQA,2BACE,sBAAKZ,EAAKG,YAAYK,OACtB,mBAAKK,wBAAyB,CAAEC,OAAQd,EAAKe,SAE/C,mBACEtB,IAAKA,YAAF,cACamB,YAAO,GADpB,MADL,MAKM,IACJ,oBAAMI,KAAK,MAAMC,aAAW,UAA5B,MAGA,oBAAMD,KAAK,MAAMC,aAAW,UAA5B,MAEQ,IAXV,wCAYuC,YAAC,OAAD,CAAMN,GAAG,KAAT,eAGzC,mBACElB,IAAKA,YAAF,wEAIamB,YAAO,GAJpB,kBAKgBA,YAAO,GALvB,MAQH,uBACGd,GACC,YAAC,OAAD,CACEa,GAAE,QAAUb,EAAaoB,KACzBC,IAAI,OACJ9C,MAAO,CAAE+C,YAAa,KAHxB,KAKKtB,EAAaU,QAItB,uBACGT,GACC,YAAC,OAAD,CAAMY,GAAE,QAAUZ,EAASmB,KAAQC,IAAI,QACpCpB,EAASS,MADZ,QAMN,YAACa,EAAD,CACEtD,KAAK,uCACLC,UAAU,WACVE,MAAM,eACNC,YAAY,YACZC,OAAO,KAMR,IAAMkD,EAAK","file":"component---src-templates-blog-post-js-6a1b69a51e317121e4d9.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React, { useEffect } from \"react\"\nimport { css } from \"@emotion/core\"\n\nexport default ({\n  repo,\n  issueTerm = \"pathname\",\n  label = \"\",\n  theme = \"github-light\",\n  crossorigin = \"anonymous\",\n  async = true,\n  style = \"\",\n}) => {\n  const rootElm = React.createRef()\n\n  useEffect(() => {\n    const utterances = document.createElement(\"script\")\n\n    // set config to of script element\n    Object.entries({\n      src: \"https://utteranc.es/client.js\",\n      repo,\n      \"issue-term\": issueTerm,\n      label,\n      theme,\n      crossorigin,\n      async,\n    }).forEach(([key, value]) => {\n      utterances.setAttribute(key, value)\n    })\n    // attach script element\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return (\n    <div\n      id=\"utterances_container\"\n      ref={rootElm}\n      className={css`\n        ${style}\n      `}\n    />\n  )\n}\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport { rhythm } from \"../utils/typography\"\nimport { css } from \"@emotion/core\"\nimport Utterances from \"../components/Utterances\"\n\nexport default function BlogPost({ data, pageContext, location }) {\n  const { previousPost, nextPost } = pageContext\n  const post = data.markdownRemark\n  const image = post.frontmatter.image\n    ? post.frontmatter.image.childImageSharp.resize\n    : null\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description}\n        image={image}\n        pathname={location.pathname}\n      />\n      <main\n        css={css`\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <Link\n          to=\"/blog/\"\n          css={css`\n            margin-bottom: ${rhythm(1)};\n          `}\n        >\n          ‚Üê Back\n        </Link>\n        <article>\n          <h1>{post.frontmatter.title}</h1>\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        </article>\n        <div\n          css={css`\n            margin-top: ${rhythm(1)};\n          `}\n        >\n          PS:{\" \"}\n          <span role=\"img\" aria-label=\"Wizard\">\n            üßô\n          </span>\n          <span role=\"img\" aria-label=\"Scroll\">\n            üìú\n          </span>{\" \"}\n          I'm looking for a freelance mission. <Link to=\"/\">See here.</Link>\n        </div>\n      </main>\n      <nav\n        css={css`\n          display: flex;\n          flex-wrap: wrap;\n          justify-content: space-between;\n          margin-top: ${rhythm(3)};\n          margin-bottom: ${rhythm(3)};\n        `}\n      >\n        <div>\n          {previousPost && (\n            <Link\n              to={`/blog${previousPost.slug}`}\n              rel=\"prev\"\n              style={{ marginRight: 20 }}\n            >\n              ‚Üê {previousPost.title}\n            </Link>\n          )}\n        </div>\n        <div>\n          {nextPost && (\n            <Link to={`/blog${nextPost.slug}`} rel=\"next\">\n              {nextPost.title} ‚Üí\n            </Link>\n          )}\n        </div>\n      </nav>\n      <Utterances\n        repo=\"ArnaudValensi/arnaudvalensi-comments\"\n        issueTerm=\"pathname\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async={true}\n      />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        image: featured {\n          childImageSharp {\n            resize(width: 1200, height: 630, jpegQuality: 100) {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}